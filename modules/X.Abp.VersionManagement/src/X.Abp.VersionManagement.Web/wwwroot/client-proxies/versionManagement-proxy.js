/* This file is automatically generated by ABP framework to use MVC Controllers from javascript. */


// module versionManagement

(function(){

  // controller x.abp.versionManagement.appEditions.appEdition

  (function(){

    abp.utils.createNamespace(window, 'x.abp.versionManagement.appEditions.appEdition');

    x.abp.versionManagement.appEditions.appEdition.checkUpdateAndroid = function(appName, arch, channel, currentVersion, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app-edition/check-update-android/' + appName + '/' + arch + '/' + channel + '/' + currentVersion + '',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.versionManagement.appEditions.appEdition.checkUpdateWin = function(appName, arch, channel, fileName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app-edition/check-update-win/' + appName + '/' + arch + '/' + channel + '/{fileName}' + abp.utils.buildQueryString([{ name: 'fileName', value: fileName }]) + '',
        type: 'GET'
      }, { dataType: 'text' }, ajaxParams));
    };

    x.abp.versionManagement.appEditions.appEdition.checkUpdateMac = function(appName, arch, channel, fileName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app-edition/check-update-mac/' + appName + '/' + arch + '/{fileName}' + abp.utils.buildQueryString([{ name: 'channel', value: channel }, { name: 'fileName', value: fileName }]) + '',
        type: 'GET'
      }, { dataType: 'text' }, ajaxParams));
    };

    x.abp.versionManagement.appEditions.appEdition.uploadApplication = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app-edition/upload-application',
        type: 'POST'
      }, ajaxParams));
    };

    x.abp.versionManagement.appEditions.appEdition.downloader = function(appName, platform, arch, channel, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app-edition/download/' + appName + '/' + platform + '/' + arch + '/' + channel + '',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.versionManagement.appEditions.appEdition.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app-edition',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    x.abp.versionManagement.appEditions.appEdition['delete'] = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app-edition/' + id + '',
        type: 'DELETE',
        dataType: null
      }, ajaxParams));
    };

    x.abp.versionManagement.appEditions.appEdition.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app-edition/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.versionManagement.appEditions.appEdition.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app-edition' + abp.utils.buildQueryString([{ name: 'appName', value: input.appName }, { name: 'version', value: input.version }, { name: 'channel', value: input.channel }, { name: 'arch', value: input.arch }, { name: 'platformType', value: input.platformType }, { name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.versionManagement.appEditions.appEdition.update = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app-edition/' + id + '',
        type: 'PUT',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    x.abp.versionManagement.appEditions.appEdition.setPublished = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/app-edition/set-published/' + id + '',
        type: 'PUT',
        dataType: null
      }, ajaxParams));
    };

  })();

})();


