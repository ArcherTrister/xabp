// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;
using X.Abp.Payment.Plans;

// ReSharper disable once CheckNamespace
namespace X.Abp.Payment.Plans;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IPlanAppService), typeof(PlanClientProxy))]
public partial class PlanClientProxy : ClientProxyBase<IPlanAppService>, IPlanAppService
{
    public virtual async Task<GatewayPlanDto> GetGatewayPlanAsync(Guid planId, string gateway)
    {
        return await RequestAsync<GatewayPlanDto>(nameof(GetGatewayPlanAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), planId },
            { typeof(string), gateway }
        });
    }

    public virtual async Task<List<PlanDto>> GetPlanListAsync()
    {
        return await RequestAsync<List<PlanDto>>(nameof(GetPlanListAsync));
    }

    public virtual async Task<PlanDto> GetAsync(Guid planId)
    {
        return await RequestAsync<PlanDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), planId }
        });
    }

    public virtual async Task<List<PlanDto>> GetManyAsync(Guid[] planIds)
    {
        return await RequestAsync<List<PlanDto>>(nameof(GetManyAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid[]), planIds }
        });
    }
}
