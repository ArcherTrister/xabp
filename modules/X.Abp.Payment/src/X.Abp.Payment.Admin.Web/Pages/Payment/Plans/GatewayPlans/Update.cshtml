@page
@using Microsoft.Extensions.Localization;
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal;
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.Pages.Shared.Components.AbpPageSearchBox;
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.Pages.Shared.Components.AbpPageToolbar;
@using Volo.Abp.Localization;
@using Volo.Abp.ObjectExtending;
@using X.Abp.Payment.Admin.Web.Pages.Payment.Plans.GatewayPlans;
@using X.Abp.Payment.Localization;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Microsoft.AspNetCore.Mvc.TagHelpers;
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Form;
@using Volo.Abp.Data;
@using X.Abp.Payment.Admin.Web.Pages;
@using X.Abp.Payment.Admin.Web.Menus;
@using X.Abp.Payment.Admin.Web.Pages.Payment;

@inject IStringLocalizerFactory StringLocalizerFactory

@inherits PaymentAdminPageBase

@model UpdateModalModel

@{
    Layout = null;
}

<abp-card>
    <abp-card-header title="@L["Edit"].Value"></abp-card-header>
    <abp-card-body>
        <form asp-page="/Payment/Plans/GatewayPlans/UpdateModal">
            <abp-input asp-for="PlanId" hidden />
            <abp-input asp-for="Gateway" hidden />

            <abp-input asp-for="GatewayPlan.ExternalId" />

            @foreach (var propertyInfo in ObjectExtensionManager.Instance.GetProperties<GatewayPlansUpdateViewModel>())
            {
                if (!propertyInfo.Name.EndsWith("_Text"))
                {
                    if (propertyInfo.Type.IsEnum || !propertyInfo.Lookup.Url.IsNullOrEmpty())
                    {
                        if (propertyInfo.Type.IsEnum)
                        {
                            Model.GatewayPlan.ExtraProperties.ToEnum(propertyInfo.Name, propertyInfo.Type);
                        }
                        <abp-select asp-for="GatewayPlan.ExtraProperties[propertyInfo.Name]"
                                    label="@propertyInfo.GetLocalizedDisplayName(StringLocalizerFactory)"
                                    autocomplete-api-url="@propertyInfo.Lookup.Url"
                                    autocomplete-selected-item-name="@Model.GatewayPlan.GetProperty(propertyInfo.Name+"_Text")"
                                    autocomplete-selected-item-value="@Model.GatewayPlan.GetProperty(propertyInfo.Name)"
                                    autocomplete-filter-param-name="@propertyInfo.Lookup.FilterParamName"
                                    autocomplete-items-property-name="@propertyInfo.Lookup.ResultListPropertyName"
                                    autocomplete-display-property-name="@propertyInfo.Lookup.DisplayPropertyName"
                                    autocomplete-value-property-name="@propertyInfo.Lookup.ValuePropertyName"></abp-select>
                    }
                    else
                    {
                        <abp-input type="@propertyInfo.GetInputType()"
                                   asp-for="GatewayPlan.ExtraProperties[propertyInfo.Name]"
                                   label="@propertyInfo.GetLocalizedDisplayName(StringLocalizerFactory)"
                                   asp-format="@propertyInfo.GetInputFormatOrNull()"
                                   value="@propertyInfo.GetInputValueOrNull(Model.GatewayPlan.GetProperty(propertyInfo.Name))" />
                    }
                }
            }

        </form>
    </abp-card-body>
    <abp-modal-footer buttons="@(AbpModalButtons.Cancel|AbpModalButtons.Save)"></abp-modal-footer>
</abp-card>
