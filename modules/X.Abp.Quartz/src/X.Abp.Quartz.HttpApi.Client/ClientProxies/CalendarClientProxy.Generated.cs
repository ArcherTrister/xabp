// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;
using X.Abp.Quartz.Calendars;
using X.Abp.Quartz.Calendars.Dtos;

// ReSharper disable once CheckNamespace
namespace X.Abp.Quartz;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(ICalendarAppService), typeof(CalendarClientProxy))]
public partial class CalendarClientProxy : ClientProxyBase<ICalendarAppService>, ICalendarAppService
{
    public virtual async Task<IReadOnlyCollection<String>> GetListAsync(string schedulerName)
    {
        return await RequestAsync<IReadOnlyCollection<String>>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), schedulerName }
        });
    }

    public virtual async Task<CalendarDetailDto> GetAsync(string schedulerName, string calendarName)
    {
        return await RequestAsync<CalendarDetailDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), schedulerName },
            { typeof(string), calendarName }
        });
    }

    public virtual async Task CreateAsync(string schedulerName, string calendarName, bool replace, bool updateTriggers)
    {
        await RequestAsync(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), schedulerName },
            { typeof(string), calendarName },
            { typeof(bool), replace },
            { typeof(bool), updateTriggers }
        });
    }

    public virtual async Task DeleteAsync(string schedulerName, string calendarName)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), schedulerName },
            { typeof(string), calendarName }
        });
    }
}
