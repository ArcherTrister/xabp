// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;
using X.Abp.Forms.Questions;

// ReSharper disable once CheckNamespace
namespace X.Abp.Forms.Questions;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IQuestionAppService), typeof(QuestionClientProxy))]
public partial class QuestionClientProxy : ClientProxyBase<IQuestionAppService>, IQuestionAppService
{
    public virtual async Task<List<QuestionDto>> GetListAsync(GetQuestionListDto input)
    {
        return await RequestAsync<List<QuestionDto>>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetQuestionListDto), input }
        });
    }

    public virtual async Task<QuestionDto> GetAsync(Guid id)
    {
        return await RequestAsync<QuestionDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<QuestionDto> UpdateAsync(Guid id, UpdateQuestionDto input)
    {
        return await RequestAsync<QuestionDto>(nameof(UpdateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id },
            { typeof(UpdateQuestionDto), input }
        });
    }

    public virtual async Task DeleteAsync(Guid id)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }
}
