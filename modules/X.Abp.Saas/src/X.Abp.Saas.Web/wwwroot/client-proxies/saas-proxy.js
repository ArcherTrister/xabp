/* This file is automatically generated by ABP framework to use MVC Controllers from javascript. */


// module saas

(function(){

  // controller x.abp.saas.edition

  (function(){

    abp.utils.createNamespace(window, 'x.abp.saas.edition');

    x.abp.saas.edition.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/editions/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.saas.edition.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/editions' + abp.utils.buildQueryString([{ name: 'filter', value: input.filter }, { name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.saas.edition.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/editions',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    x.abp.saas.edition.update = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/editions/' + id + '',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    x.abp.saas.edition['delete'] = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/editions/' + id + '',
        type: 'DELETE',
        dataType: null
      }, ajaxParams));
    };

    x.abp.saas.edition.getUsageStatistics = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/editions/statistics/usage-statistic',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.saas.edition.getPlanLookup = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/editions/plan-lookup',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.saas.edition.getAllList = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/editions/all',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.saas.edition.moveAllTenants = function(id, targetEditionId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/editions/' + id + '/move-all-tenants' + abp.utils.buildQueryString([{ name: 'targetEditionId', value: targetEditionId }]) + '',
        type: 'PUT',
        dataType: null
      }, ajaxParams));
    };

  })();

  // controller x.abp.saas.subscription

  (function(){

    abp.utils.createNamespace(window, 'x.abp.saas.subscription');

    x.abp.saas.subscription.createSubscription = function(editionId, tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/subscription' + abp.utils.buildQueryString([{ name: 'editionId', value: editionId }, { name: 'tenantId', value: tenantId }]) + '',
        type: 'POST'
      }, ajaxParams));
    };

  })();

  // controller x.abp.saas.tenant

  (function(){

    abp.utils.createNamespace(window, 'x.abp.saas.tenant');

    x.abp.saas.tenant.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/tenants/' + id + '',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.saas.tenant.getList = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/tenants' + abp.utils.buildQueryString([{ name: 'filter', value: input.filter }, { name: 'getEditionNames', value: input.getEditionNames }, { name: 'editionId', value: input.editionId }, { name: 'expirationDateMin', value: input.expirationDateMin }, { name: 'expirationDateMax', value: input.expirationDateMax }, { name: 'activationState', value: input.activationState }, { name: 'sorting', value: input.sorting }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.saas.tenant.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/tenants',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    x.abp.saas.tenant.update = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/tenants/' + id + '',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    x.abp.saas.tenant['delete'] = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/tenants/' + id + '',
        type: 'DELETE',
        dataType: null
      }, ajaxParams));
    };

    x.abp.saas.tenant.getDatabases = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/tenants/databases',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.saas.tenant.getConnectionStrings = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/tenants/' + id + '/connection-strings',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.saas.tenant.updateConnectionStrings = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/tenants/' + id + '/connection-strings',
        type: 'PUT',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    x.abp.saas.tenant.applyDatabaseMigrations = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/tenants/' + id + '/apply-database-migrations',
        type: 'POST',
        dataType: null
      }, ajaxParams));
    };

    x.abp.saas.tenant.getEditionLookup = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/tenants/lookup/editions',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.saas.tenant.checkConnectionString = function(connectionString, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/tenants/check-connection-string' + abp.utils.buildQueryString([{ name: 'connectionString', value: connectionString }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    x.abp.saas.tenant.setPassword = function(id, input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/saas/tenants/' + id + '/set-password',
        type: 'PUT',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

  })();

})();


