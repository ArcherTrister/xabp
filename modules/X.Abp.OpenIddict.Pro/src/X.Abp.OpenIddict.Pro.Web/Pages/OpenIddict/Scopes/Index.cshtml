@page
@using Microsoft.AspNetCore.Mvc.Localization;
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal;
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.Pages.Shared.Components.AbpPageSearchBox;
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.Pages.Shared.Components.AbpPageToolbar;
@using Volo.Abp.OpenIddict.Localization;
@using X.Abp.OpenIddict.Pro.Web.Menus;
@using X.Abp.OpenIddict.Pro.Web.Pages.OpenIddict.Scopes;
@inject Volo.Abp.AspNetCore.Mvc.UI.Layout.IPageLayout PageLayout
@inject IHtmlLocalizer<AbpOpenIddictResource> L
@model IndexModel
@{
    PageLayout.Content.Title = L["Scopes"].Value;
    PageLayout.Content.BreadCrumb.Add(L["Menu:OpenIddict"].Value);
    PageLayout.Content.MenuItemName = AbpOpenIddictProMenus.Scopes;
}

@section scripts {
    <abp-script-bundle name="@typeof(IndexModel).FullName">
        <abp-script src="/client-proxies/openiddictpro-proxy.js" />
        <abp-script src="/Pages/OpenIddict/Scopes/index.js" />
    </abp-script-bundle>
}

@section content_toolbar {
    @await Component.InvokeAsync(typeof(AbpPageToolbarViewComponent), new { pageName = typeof(IndexModel).FullName })
}

<div id="ScopesWrapper">
    <abp-card>
        <abp-card-body>
            <abp-row>
                <abp-column>
                    @await Component.InvokeAsync(typeof(AbpPageSearchBoxViewComponent))
                </abp-column>
            </abp-row>
        </abp-card-body>
    </abp-card>
    <abp-table id="ScopesTable" striped-rows="true" class="nowrap"></abp-table>
</div>

