version: "3.7"

services:
    #   pro-web:
    #     image: abpvnext/pro-web:latest
    #     container_name: pro-web
    #     build:
    #       context: ../../../
    #       dockerfile: angular/Dockerfile.local
    #     ports:
    #       - "4200:80"
    #     depends_on:
    #       - pro-api
    #     volumes:
    #       - ./dynamic-env.json://usr/share/nginx/html/dynamic-env.json
    #     networks:
    #       - abp-network

    pro-api:
        image: abpvnext/pro-api:latest
        container_name: pro-api
        build:
            context: ../../
            dockerfile: src/AbpVnext.Pro.HttpApi.Host/Dockerfile.local
        environment:
            - ASPNETCORE_URLS=https://+:443;http://+:80;
            - Kestrel__Certificates__Default__Path=/root/certificate/localhost.pfx
            - Kestrel__Certificates__Default__Password=91f91912-5ab0-49df-8166-23377efaf3cc
            - App__SelfUrl=https://localhost:44354
            - App__AngularUrl=http://localhost:4200
            - AuthServer__RequireHttpsMetadata=false
            - AuthServer__SetSelfAsIssuer=true
            - AuthServer__Authority=http://pro-api
            - App__MVCPublicUrl=https://localhost:44306
            - ConnectionStrings__Default=Data Source=sql-server;Initial Catalog=Pro;User Id=sa;Password=myPassw0rd;MultipleActiveResultSets=true;Persist Security Info=True;
            - Redis__Configuration=redis
        ports:
            - "44354:443"
        depends_on:
            sql-server:
                condition: service_healthy
            redis:
                condition: service_healthy
        restart: on-failure
        volumes:
            - ./certs:/root/certificate
        networks:
            - abp-network

    db-migrator:
        image: abpvnext/pro-db-migrator:latest
        container_name: db-migrator
        build:
            context: ../../
            dockerfile: src/Pro.DbMigrator/Dockerfile.local
        environment:
            - ConnectionStrings__Default=Data Source=sql-server;Initial Catalog=Pro;User Id=sa;Password=myPassw0rd;MultipleActiveResultSets=true;Persist Security Info=True;
        depends_on:
            sql-server:
                condition: service_healthy
        networks:
            - abp-network

    sql-server:
        container_name: sql-server
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
            - "1434:1433"
        environment:
            SA_PASSWORD: "myPassw0rd"
            ACCEPT_EULA: "Y"
        volumes:
            - sqldata:/var/opt/mssql
        networks:
            - abp-network
        healthcheck:
            test: /opt/mssql-tools/bin/sqlcmd -S sql-server -U sa -P "myPassw0rd" -Q "SELECT 1" -b -o /dev/null
            interval: 10s
            timeout: 3s
            retries: 10
            start_period: 10s

    redis:
        container_name: redis
        image: redis:alpine
        ports:
            - "6379:6379"
        networks:
            - abp-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]

volumes:
    sqldata:
        name: pro_sqldata
networks:
    abp-network:
        name: pro-network
        driver: bridge
